{"version":3,"sources":["../src/filters.js"],"names":["moment","_","filters","angular","module","filter","date","calendar","format","ms","seconds","parseInt","join","replace","batch","timestamp","get","Date","states","input","hasOwnProperty"],"mappings":";;;;;;;;;AAAOA,kB;;AACAC,a;;;AAEHC,mB,GAAUC,QAAQC,MAAR,CAAe,iBAAf,C;;;AAEdF,oBAAQG,MAAR,CAAe,UAAf,EAA2B;AAAA,uBAAM,UAACC,IAAD;AAAA,2BAAUN,OAAOM,IAAP,EAAaC,QAAb,EAAV;AAAA,iBAAN;AAAA,aAA3B;;AAEAL,oBAAQG,MAAR,CAAe,YAAf,EAA6B;AAAA,uBAAM,UAACC,IAAD,EAAOE,MAAP;AAAA,2BAAkBR,OAAOM,IAAP,EAAaE,MAAb,CAAoBA,MAApB,CAAlB;AAAA,iBAAN;AAAA,aAA7B;;AAEAN,oBAAQG,MAAR,CAAe,UAAf,EAA2B;AAAA,uBAAM,UAACI,EAAD,EAAQ;AACrC,wBAAIC,UAAUD,KAAK,IAAnB;;AAEA,2BAAO,CACHE,SAASD,UAAU,EAAV,GAAe,EAAxB,CADG,EAEHC,SAASD,UAAU,EAAV,GAAe,EAAxB,CAFG,EAGHC,SAASD,UAAU,EAAnB,CAHG,EAKFE,IALE,CAKG,GALH,EAMFC,OANE,CAMM,WANN,EAMmB,KANnB,CAAP;AAOH,iBAV0B;AAAA,aAA3B;;AAYAX,oBAAQG,MAAR,CAAe,WAAf,EAA4B,YAAW;AACnC,uBAAO,UAACS,KAAD,EAAW;AACd,wBAAIC,YAAYd,EAAEe,GAAF,CAAMF,KAAN,EAAa,gBAAb,CAAhB;;AAEA,wBAAIC,SAAJ,EAAe;AACX,+BAAO,IAAIE,IAAJ,CAASF,SAAT,CAAP;AACH;AACJ,iBAND;AAOH,aARD;;AAUAb,oBAAQG,MAAR,CAAe,aAAf,EAA8B,YAAW;AACrC,oBAAIa,SAAS;AACT,8BAAU,UADD;AAET,kCAAc,aAFL;AAGT,+BAAW,YAHF;AAIT,+BAAW,SAJF;AAKT,6BAAS,QALA;AAMT,+BAAW;AANF,iBAAb;;AASA,uBAAO,UAACC,KAAD;AAAA,2BAAWD,OAAOE,cAAP,CAAsBD,KAAtB,IAA+BD,OAAOC,KAAP,CAA/B,GAA+CA,KAA1D;AAAA,iBAAP;AACH,aAXD;;AAaAjB,oBAAQG,MAAR,CAAe,iBAAf,EAAkC,YAAW;AACzC,oBAAIa,SAAS;AACT,8BAAU,cADD;AAET,kCAAc,cAFL;AAGT,+BAAW,cAHF;AAIT,+BAAW,oBAJF;AAKT,6BAAS,oBALA;AAMT,+BAAW;AANF,iBAAb;;AASA,uBAAO,UAACC,KAAD;AAAA,2BAAWD,OAAOE,cAAP,CAAsBD,KAAtB,IAA+BD,OAAOC,KAAP,CAA/B,GAA+CA,KAA1D;AAAA,iBAAP;AACH,aAXD;;AAaAjB,oBAAQG,MAAR,CAAe,UAAf,EAA2B,YAAW;AAClC,oBAAIa,SAAS;AACT,mCAAe,aADN;AAET,gCAAY,aAFH;AAGT,+BAAW,aAHF;AAIT,4BAAQ,cAJC;AAKT,4BAAQ,aALC;AAMT,qCAAiB,aANR;AAOT,6BAAS,QAPA;AAQT,4BAAQ,aARC;AAST,+BAAW;AATF,iBAAb;;AAYA,uBAAO,UAACC,KAAD;AAAA,2BAAWD,OAAOE,cAAP,CAAsBD,KAAtB,IAA+BD,OAAOC,KAAP,CAA/B,GAA+CA,KAA1D;AAAA,iBAAP;AACH,aAdD","file":"filters.js","sourcesContent":["import moment from 'moment'\r\nimport _ from 'lodash'\r\n\r\nlet filters = angular.module('grafana.filters');\r\n\r\nfilters.filter('calendar', () => (date) => moment(date).calendar());\r\n\r\nfilters.filter('dateFormat', () => (date, format) => moment(date).format(format));\r\n\r\nfilters.filter('duration', () => (ms) => {\r\n    let seconds = ms / 1000;\r\n\r\n    return [\r\n        parseInt(seconds / 60 / 60),\r\n        parseInt(seconds / 60 % 60),\r\n        parseInt(seconds % 60)\r\n    ]\r\n        .join(\":\")\r\n        .replace(/\\b(\\d)\\b/g, \"0$1\");\r\n})\r\n\r\nfilters.filter('startedAt', function() {\r\n    return (batch) => {\r\n        var timestamp = _.get(batch, 'rm.startedTime');\r\n\r\n        if (timestamp) {\r\n            return new Date(timestamp);\r\n        }\r\n    };\r\n});\r\n\r\nfilters.filter('serverState', function() {\r\n    var states = {\r\n        'online': 'Доступен',\r\n        'connecting': 'Подключение',\r\n        'offline': 'Недоступен',\r\n        'success': 'Успешно',\r\n        'error': 'Ошибка',\r\n        'pending': 'Отправка запроса'\r\n    };\r\n\r\n    return (input) => states.hasOwnProperty(input) ? states[input] : input;\r\n});\r\n\r\nfilters.filter('serverStateIcon', function() {\r\n    var states = {\r\n        'online': 'fa fa-circle',\r\n        'connecting': 'fa fa-circle',\r\n        'offline': 'fa fa-circle',\r\n        'success': 'fa fa-check-circle',\r\n        'error': 'fa fa-times-circle',\r\n        'pending': 'fa fa-spinner fa-spin'\r\n    };\r\n\r\n    return (input) => states.hasOwnProperty(input) ? states[input] : input;\r\n});\r\n\r\nfilters.filter('jobState', function() {\r\n    var states = {\r\n        'not_started': 'Не запущена',\r\n        'starting': 'Запускается',\r\n        'running': 'Выполняется',\r\n        'idle': 'Бездействует',\r\n        'busy': 'Выполняется',\r\n        'shutting_down': 'Завершается',\r\n        'error': 'Ошибка',\r\n        'dead': 'Остановлена',\r\n        'success': 'Выполнена'\r\n    };\r\n\r\n    return (input) => states.hasOwnProperty(input) ? states[input] : input;\r\n});"]}